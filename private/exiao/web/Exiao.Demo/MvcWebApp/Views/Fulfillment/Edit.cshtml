@model Exiao.Demo.DataAccess.FulfillmentOrderEntry

@{
    ViewBag.Title = CultureHelper.GetViewText("EditFulfillmentOrder") + ": " + Model.BackendFulfillmentOrderId;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@CultureHelper.GetViewText("FulfillmentOrder")</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("SupplierId"))
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SupplierId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MflFulfillmentOrderId, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("FrontEndFulfillmentOrderId"))
            <div class="col-md-10">
                @Html.DisplayFor(model => model.MflFulfillmentOrderId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BackendFulfillmentOrderId, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("FulfillmentOrderId"))
            <div class="col-md-10">
                @Html.DisplayFor(model => model.BackendFulfillmentOrderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.BackendFulfillmentOrderId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("Status"))
            <div class="col-md-10">
                @Html.DropDownListFor(
     model => model.Status,
        ((IEnumerable<KeyValuePair<string, string>>)ViewBag.StatusList).Select(kvp => new SelectListItem { Text = CultureHelper.GetViewText(kvp.Value), Value = kvp.Key }),
               new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryAddressData, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("DeliveryAddress"))
            <div class="col-md-10">
                @Html.DisplayFor(model => model.DeliveryAddressData, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemLinesData, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: CultureHelper.GetViewText("ItemLines"))
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ItemLinesData, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@CultureHelper.GetViewText("Save")" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(CultureHelper.GetViewText("BackToList"), "Index")
</div>
